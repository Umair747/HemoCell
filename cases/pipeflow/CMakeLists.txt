#=======================================
# Build settings. Set these.

# Project setup
SET(PROJECT_NAME pipeflow)
SET(PROJECT_SRC "pipeflow.cpp")

# HemoCell location relative to CMakelists.txt
SET(HEMOCELL_BASE_DIR "./../../")
get_filename_component(HEMOCELL_BASE_DIR "${HEMOCELL_BASE_DIR}" ABSOLUTE)
SET(HEMOCELL_DIR "${HEMOCELL_BASE_DIR}/build/hemocell")
SET(PALABOS_BASE_DIR "${HEMOCELL_BASE_DIR}/palabos")
SET(PALABOS_DIR "${HEMOCELL_BASE_DIR}/build/palabos")


MESSAGE( STATUS "HEMOCELL_BASE_DIR:         " ${HEMOCELL_BASE_DIR} )
MESSAGE( STATUS "HEMOCELL_DIR:         " ${HEMOCELL_DIR} )
MESSAGE( STATUS "PALABOS_BASE_DIR:         " ${PALABOS_BASE_DIR} )
MESSAGE( STATUS "PALABOS_DIR:         " ${PALABOS_DIR} )

#=======================================
##### Beginning of build script

PROJECT(${PROJECT_NAME} CXX)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
SET(CMAKE_VERBOSE_MAKEFILE 1)
INCLUDE(GNUInstallDirs)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}")

IF (NOT CMAKE_CXX_FLAGS)
  #If flags are not set, add default flags
  SET(CMAKE_BUILD_TYPE ${BUILD_TYPE})
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -march=native -std=c++11")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-empty-body")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-parameter")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unused-result")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -ggdb -Wformat -Wformat-security")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror=format-security")
ENDIF (NOT CMAKE_CXX_FLAGS)

#=======================================
#Parmetis
FIND_PATH(PARMETIS_INCLUDE_DIR parmetis.h /usr/local/include /usr/include)
FIND_LIBRARY(PARMETIS_LIBRARY parmetis /usr/local/lib /usr/lib) 
IF(PARMETIS_INCLUDE_DIR)
	IF(PARMETIS_LIBRARY)
		SET( PARMETIS_LIBRARIES ${PARMETIS_LIBRARY} ${METIS_LIBRARY})
		SET( PARMETIS_FOUND "YES" )
	ENDIF(PARMETIS_LIBRARY)
ENDIF(PARMETIS_INCLUDE_DIR)
MESSAGE( STATUS "PARMETIS INCLUDE: " ${PARMETIS_INCLUDE_DIR})
MESSAGE( STATUS "PARMETIS LIBRARIES: " ${PARMETIS_LIBRARIES})
INCLUDE_DIRECTORIES(${PARMETIS_INCLUDE_DIR})

INCLUDE_DIRECTORIES(${PALABOS_BASE_DIR}/externalLibraries)
INCLUDE_DIRECTORIES(${PALABOS_BASE_DIR}/src/libraryInterfaces)

SET(DEFAULT ON CACHE INTERNAL "Default value for enabled by default options")
OPTION(ENABLE_MPI "Enable MPI" ${DEFAULT})
INCLUDE(FindMPI)
IF(MPI_CXX_FOUND)
  SET(CMAKE_CXX_COMPILER ${MPI_CXX_COMPILER})
ELSE(MPI_CXX_FOUND)
  MESSAGE(FATAL ERROR "MPI compiler not found!")
ENDIF(MPI_CXX_FOUND)

FIND_PACKAGE(HDF5 COMPONENTS C HL)

INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/helper)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/config)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/core)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/models)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/mechanics)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/external)
INCLUDE_DIRECTORIES(${HEMOCELL_BASE_DIR}/IO)
INCLUDE_DIRECTORIES(${PALABOS_BASE_DIR}/src)

LIST(APPEND SRC_FILES ${PROJECT_SRC})

include(ExternalProject) 
#ExternalProject_Add("palabos" PREFIX ${PALABOS_DIR} SOURCE_DIR ${PALABOS_DIR}
#    BINARY_DIR ${PALABOS_DIR} INSTALL_COMMAND "")
ExternalProject_Add("hemocell" PREFIX ${HEMOCELL_DIR} SOURCE_DIR ${HEMOCELL_DIR}
    BINARY_DIR ${HEMOCELL_DIR} INSTALL_COMMAND "")


ADD_EXECUTABLE(${PROJECT_NAME} ${SRC_FILES})
#ADD_DEPENDENCIES(${PROJECT_NAME} "palabos")
ADD_DEPENDENCIES(${PROJECT_NAME} "hemocell")
#target_link_libraries(${PROJECT_NAME} ${PALABOS_DIR}/libpalabos.a)
target_link_libraries(${PROJECT_NAME} ${HEMOCELL_DIR}/libhemocell.a)
target_link_libraries(${PROJECT_NAME} ${PARMETIS_LIBRARIES})

# This is needed since stupid Lisa has a bug in 3.5.1
IF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 3.0)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${HDF5_LIBRARIES})
ELSE (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 3.0)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} hdf5_hl hdf5)
ENDIF (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 3.0)
